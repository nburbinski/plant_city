{"version":3,"sources":["components/SearchPlants.js","services/plants.js","components/Plant.js","components/PlantList.js","services/login.js","components/CreateUser.js","components/Login.js","components/OutsideAlerter.js","components/PlantForm.js","components/Navbar.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["SearchPlants","plants","setPlants","allPlants","useState","searchPlant","setSearchPlant","handleSubmit","event","a","preventDefault","filteredList","filter","plant","name","toLowerCase","indexOf","console","log","onSubmit","className","type","value","onChange","e","target","placeholder","aria-label","baseUrl","token","getAll","config","headers","Authorization","axios","get","create","newObject","post","response","data","update","id","put","deletePlant","request","delete","then","catch","error","setToken","newToken","Plant","setConfMessage","correctedDate","Date","lastWatered","length","formatted_date","getFullYear","getMonth","getDate","startDate","setStartDate","updatePlant","date","split","parseInt","newDate","join","newLastWatered","push","newPlant","plantService","message","water","light","onClick","window","confirm","PlantList","setPlantForm","map","key","login","credentials","CreateUser","setCreateUser","setName","username","setUsername","password","setPassword","handleCreateUserSubmit","loginService","Login","setUser","createUser","handleLoginSubmit","user","localStorage","setItem","JSON","stringify","OutsideAlerter","props","wrapperRef","useRef","handleClickOutside","current","contains","keyCode","useEffect","document","addEventListener","removeEventListener","useOutsideAlerter","ref","children","PlantForm","plantForm","plantName","setPlantName","location","setLight","setWater","otherWater","setOtherWater","setLastWatered","Navbar","open","Notification","confMessage","setTimeout","App","setAllPlants","loggedUserJSON","getItem","parse","removeItem","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c0d0984.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchPlants = ({ plants, setPlants, allPlants }) => {\r\n  const [searchPlant, setSearchPlant] = useState(\"\");\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const filteredList = allPlants.filter(\r\n      plant =>\r\n        plant.name.toLowerCase().indexOf(searchPlant.toLowerCase()) !== -1\r\n    );\r\n    console.log(filteredList);\r\n    setPlants(filteredList);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search-bar\">\r\n      <input\r\n        className=\"\"\r\n        type=\"text\"\r\n        value={searchPlant}\r\n        onChange={e => setSearchPlant(e.target.value)}\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n      />\r\n      <button className=\"btn btn-search\" type=\"submit\">\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchPlants;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/plants\";\r\n\r\n// eslint-disable-next-line\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\n// Return all plants\r\nconst getAll = () => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  return axios.get(baseUrl, config);\r\n};\r\n\r\n// Make a plant\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\n// Update a plant\r\nconst update = (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n\r\n  return axios.put(`${baseUrl}/${id}`, newObject, config);\r\n};\r\n\r\n// Delete a plant\r\nconst deletePlant = async id => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  };\r\n  const request = axios.delete(`${baseUrl}/${id}`, config);\r\n  const response = await request\r\n    .then(response => response.data)\r\n    .catch(error => console.log(error));\r\n  console.log(response);\r\n  return response;\r\n};\r\n\r\nexport default { getAll, create, update, deletePlant, setToken };\r\n","import React, { useState } from \"react\";\r\nimport plantService from \"../services/plants\";\r\n\r\nconst Plant = ({ plant, setConfMessage }) => {\r\n  // Place date into proper format\r\n  // Grab last watered date in array\r\n  const correctedDate = new Date(\r\n    plant.lastWatered[plant.lastWatered.length - 1]\r\n  );\r\n\r\n  // Correct format of date\r\n  const formatted_date =\r\n    correctedDate.getFullYear() +\r\n    \"-\" +\r\n    // Returns date without 0 and html type date requires 0\r\n    `${correctedDate.getMonth() + 1 > 9 ? \"\" : \"0\"}${correctedDate.getMonth() +\r\n      1}` +\r\n    \"-\" +\r\n    correctedDate.getDate();\r\n\r\n  // Manage state\r\n  const [startDate, setStartDate] = useState(formatted_date);\r\n\r\n  // Send update\r\n  const updatePlant = async () => {\r\n    // Increase day by 1\r\n    var date = startDate.split(\"-\");\r\n    date[2] = parseInt(date[2]) + 1;\r\n    const newDate = date.join(\"-\");\r\n\r\n    const newLastWatered = plant.lastWatered;\r\n    newLastWatered.push(newDate);\r\n\r\n    const newPlant = {\r\n      ...plant,\r\n      lastWatered: newLastWatered\r\n    };\r\n    try {\r\n      await plantService.update(plant.id, newPlant);\r\n    } catch (error) {\r\n      setConfMessage([error.message, 0]);\r\n      return;\r\n    }\r\n\r\n    setConfMessage([\"Succesfully Updated Plant! \", 1]);\r\n  };\r\n\r\n  // Handle Delete\r\n  const handleDelete = () => {\r\n    if (window.confirm(`Delete ${plant.name} ?`)) {\r\n      try {\r\n        plantService.deletePlant(plant.id);\r\n      } catch (error) {\r\n        setConfMessage([error.message, 0]);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"card-body\">\r\n      <h4 className=\"card-title\">\r\n        {plant.name} <i className=\"fas fa-leaf fa-sm card-image\"></i>\r\n      </h4>\r\n      <ul>\r\n        <li className=\"card-text\">\r\n          <p className=\"card-text-title\">Water</p>\r\n          <p>{plant.water}</p>\r\n        </li>\r\n        <li className=\"card-text\">\r\n          <p className=\"card-text-title\">Light</p>\r\n          <p>{plant.light}</p>\r\n        </li>\r\n        <li className=\"card-text\">\r\n          <p className=\"card-text-title\">Last Watered</p>\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={({ target }) => setStartDate(target.value)}\r\n          ></input>\r\n          <button className=\"btn btn-update\" onClick={updatePlant}>\r\n            Update\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <button className=\"btn btn-danger card-btn\" onClick={handleDelete}>\r\n        Delete?\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plant;\r\n","import React from \"react\";\r\nimport Plant from \"./Plant\";\r\n\r\nconst PlantList = ({ plants, setPlantForm, setConfMessage }) => {\r\n  if (!plants || plants.length === 0)\r\n    return (\r\n      <>\r\n        <div> No plants found! </div>\r\n        <div\r\n          onClick={() => setPlantForm(1)}\r\n          className=\"card-body card-body-add card-body-add-np \"\r\n        >\r\n          <i className=\"fas fa-plus\"></i>{\" \"}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n      {plants.map(plant => (\r\n        <Plant key={plant.id} plant={plant} setConfMessage={setConfMessage} />\r\n      ))}\r\n      <div onClick={() => setPlantForm(1)} className=\"card-body card-body-add \">\r\n        <i className=\"fas fa-plus\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlantList;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst create = async credentials => {\r\n  const response = await axios.post(\"/api/users\", credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login, create };\r\n","import React, { useState } from \"react\";\r\nimport loginService from \"../services/login\";\r\n\r\nconst CreateUser = ({ setCreateUser, setConfMessage }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleCreateUserSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await loginService.create({ name, username, password });\r\n\r\n      setCreateUser(0);\r\n\r\n      setName(\"\");\r\n      setPassword(\"\");\r\n      setUsername(\"\");\r\n    } catch (error) {\r\n      setConfMessage(error.message);\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleCreateUserSubmit}>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-label\"> Name</div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-label\"> Username</div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-label\"> Password</div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n            value={password}\r\n          ></input>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Create User\r\n        </button>\r\n        <button onClick={() => setCreateUser(0)} className=\"btn btn-createuser\">\r\n          Back\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useState } from \"react\";\r\n\r\nimport loginService from \"../services/login\";\r\nimport plantService from \"../services/plants\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nconst Login = ({ setUser, setConfMessage }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [createUser, setCreateUser] = useState(0);\r\n\r\n  const handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password\r\n      });\r\n\r\n      window.localStorage.setItem(\"loggedPlantUser\", JSON.stringify(user));\r\n\r\n      plantService.setToken(user.token);\r\n      setPassword(\"\");\r\n      setUsername(\"\");\r\n      setUser(user);\r\n    } catch (error) {\r\n      setConfMessage([error.message, 0]);\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  const handleCreateUser = () => {\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setCreateUser(1);\r\n  };\r\n\r\n  if (createUser === 1)\r\n    return (\r\n      <CreateUser\r\n        setConfMessage={setConfMessage}\r\n        setCreateUser={setCreateUser}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleLoginSubmit} className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <p className=\"form-label\"> Username </p>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p className=\"form-label\"> Password </p>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary m-1\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        <button onClick={handleCreateUser} className=\"btn btn-createuser\">\r\n          Create User?\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Code borrowed from stack overflow @ Ben Bud\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nconst useOutsideAlerter = props => {\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  const handleClickOutside = event => {\r\n    if (\r\n      (props.wrapperRef.current &&\r\n        !props.wrapperRef.current.contains(event.target)) ||\r\n      event.keyCode === 27\r\n    ) {\r\n      props.setPlantForm(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    document.addEventListener(\"keydown\", handleClickOutside, false);\r\n\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      document.removeEventListener(\"keydown\", handleClickOutside, false);\r\n    };\r\n  });\r\n};\r\n\r\nexport default function OutsideAlerter(props) {\r\n  const setPlantForm = props.setPlantForm;\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter({ wrapperRef, setPlantForm });\r\n\r\n  return (\r\n    <div className=\"plant-form-wrapper\" ref={wrapperRef}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport plantService from \"../services/plants\";\r\nimport OutsideAlerter from \"./OutsideAlerter\";\r\n\r\nconst PlantForm = ({ plantForm, setPlantForm, setPlants, setConfMessage }) => {\r\n  const [plantName, setPlantName] = useState(\"\");\r\n  const [location, setLocation] = useState(\"Inside\");\r\n  const [light, setLight] = useState(\"Indirect Light\");\r\n  const [water, setWater] = useState(\"Top 1/2 inch is dry\");\r\n  const [otherWater, setOtherWater] = useState(\"\");\r\n  const [lastWatered, setLastWatered] = useState(new Date());\r\n\r\n  if (plantForm === 0) return <></>;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Place date in Date format\r\n    setLastWatered(new Date(lastWatered));\r\n\r\n    if (water === \"Other\") {\r\n      const plant = {\r\n        name: plantName,\r\n        location: location,\r\n        light: light,\r\n        water: otherWater,\r\n        lastWatered: [lastWatered]\r\n      };\r\n\r\n      plantService\r\n        .create(plant)\r\n        .then(response => console.log(response))\r\n        .catch(error => setConfMessage([error.message, 0]));\r\n    } else {\r\n      const plant = {\r\n        name: plantName,\r\n        location: location,\r\n        light: light,\r\n        water: water,\r\n        lastWatered: [lastWatered]\r\n      };\r\n\r\n      plantService\r\n        .create(plant)\r\n        .then(response => console.log(response))\r\n        .catch(error => setConfMessage([error.message, 0]));\r\n    }\r\n\r\n    plantService.getAll().then(plants => {\r\n      setPlants(plants.data);\r\n    });\r\n\r\n    setPlantName(\"\");\r\n    setWater(\"\");\r\n\r\n    setPlantForm(0);\r\n\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <OutsideAlerter setPlantForm={setPlantForm}>\r\n      <form onSubmit={handleSubmit} className=\"plant-form\">\r\n        <h1>Add a new plant</h1>\r\n        <div className=\"form-group\">\r\n          <div className=\"plant-form-query\">Plant Name: </div>\r\n          <input\r\n            className=\"plant-form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter plant name here...\"\r\n            value={plantName}\r\n            onChange={({ target }) => setPlantName(target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"plant-form-query\">Water requirements: </div>\r\n          <select\r\n            className=\"\"\r\n            value={water}\r\n            onChange={({ target }) => setWater(target.value)}\r\n          >\r\n            <option>Top 1/2 inch is dry</option>\r\n            <option>Top 1 inch is dry</option>\r\n            <option>Other</option>\r\n          </select>\r\n          <input\r\n            className={water === \"Other\" ? \"plant-form-input\" : \"hidden\"}\r\n            placeholder=\"Water requirements...\"\r\n            value={otherWater}\r\n            onChange={({ target }) => setOtherWater(target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"plant-form-query\">Light requirements:</div>\r\n          <select\r\n            className=\"l\"\r\n            onChange={({ target }) => setLight(target.value)}\r\n          >\r\n            <option>Bright Light</option>\r\n            <option>Indirect Light</option>\r\n            <option>Partial Shade</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"plant-form-query\">Last Watered:</div>\r\n          <input\r\n            type=\"date\"\r\n            className=\"plant-form-input\"\r\n            onChange={({ target }) => setLastWatered(target.value)}\r\n          ></input>\r\n          <p className=\"plant-form-p\">\r\n            *Leaving the date blank will default to today's date\r\n          </p>\r\n        </div>\r\n        <button className=\"btn \" type=\"submit\">\r\n          Add Plant!\r\n        </button>\r\n        <button className=\"btn btn-cancel \" onClick={() => setPlantForm(0)}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </OutsideAlerter>\r\n  );\r\n};\r\n\r\nexport default PlantForm;\r\n","import React from \"react\";\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"main-nav\">\r\n      <button className=\"btn\">Home</button>\r\n      <button\r\n        onClick={() =>\r\n          window.open(\"https://github.com/nburbinski/plant_city\", \"github repo\")\r\n        }\r\n        className=\"btn\"\r\n      >\r\n        GitHub\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ confMessage, setConfMessage }) => {\r\n  if (confMessage === \"\") {\r\n    return \"\";\r\n  }\r\n  setTimeout(() => {\r\n    setConfMessage(\"\");\r\n  }, 4000);\r\n  if (confMessage[1] === 1) {\r\n    return (\r\n      <>\r\n        <p className=\"notif-success\">{confMessage[0]}</p>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <p className=\"notif-fail\">{confMessage[0]}</p>\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\n\n// Import components\nimport SearchPlants from \"./components/SearchPlants\";\nimport PlantList from \"./components/PlantList\";\nimport Login from \"./components/Login\";\nimport PlantForm from \"./components/PlantForm\";\nimport Navbar from \"./components/Navbar\";\nimport Notification from \"./components/Notification\";\n\nimport plantService from \"./services/plants\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [allPlants, setAllPlants] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [plantForm, setPlantForm] = useState(0);\n  const [confMessage, setConfMessage] = useState([]);\n\n  // Check if user is logged in\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedPlantUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      plantService.setToken(user.token);\n    }\n  }, []);\n\n  // Get all plants\n  useEffect(() => {\n    plantService.getAll().then(plants => {\n      setAllPlants(plants.data);\n      setPlants(plants.data);\n    });\n  }, [allPlants]);\n\n  const handleLogout = () => {\n    setPlants([]);\n    window.localStorage.removeItem(\"loggedPlantUser\");\n    setUser(null);\n  };\n\n  // Render login in if there is no user\n  if (user === null)\n    return (\n      <div className=\"login\">\n        <Notification\n          confMessage={confMessage}\n          setConfMessage={setConfMessage}\n        />\n        <div className=\"login-form\">\n          <div className=\"login-header\">\n            <h1>Plant City</h1>\n          </div>\n\n          <div className=\"login-body\">\n            <Login setUser={setUser} setConfMessage={setConfMessage} />\n          </div>\n        </div>\n      </div>\n    );\n\n  // Render app\n  return (\n    <div className=\"plant-app\">\n      <PlantForm\n        plantForm={plantForm}\n        setPlantForm={setPlantForm}\n        setPlants={setAllPlants}\n        setConfMessage={setConfMessage}\n      />\n      <header className=\"plant-app-header\">\n        <h1>Plant City</h1>\n        <div className=\"logout\">\n          {`Hi, ${user.name}!`}\n          <button className=\"fa fa-sign-out\" onClick={handleLogout}></button>\n        </div>\n        <Navbar />\n      </header>\n      <section className=\"app-body\">\n        <Notification\n          confMessage={confMessage}\n          setConfMessage={setConfMessage}\n        />\n        <SearchPlants\n          plants={plants}\n          setPlants={setPlants}\n          allPlants={allPlants}\n        />\n        <section className=\"app-body-main\">\n          <PlantList\n            plants={plants}\n            setPlants={setPlants}\n            setPlantForm={setPlantForm}\n            setConfMessage={setConfMessage}\n          />\n        </section>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}